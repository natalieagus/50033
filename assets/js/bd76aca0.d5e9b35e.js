"use strict";(self.webpackChunksite_docusaurus_template=self.webpackChunksite_docusaurus_template||[]).push([[9561],{71971:e=>{e.exports=JSON.parse('{"version":{"pluginId":"resources","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"General Resources","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"The Game UI Database","href":"/50033/resources/general/uidb","docId":"general/uidb","unlisted":false},{"type":"link","label":"Tilemap","href":"/50033/resources/general/tilemap","docId":"general/tilemap","unlisted":false},{"type":"link","label":"Game Programming Patterns","href":"/50033/resources/general/prog-pattern","docId":"general/prog-pattern","unlisted":false},{"type":"link","label":"Asset Library","href":"/50033/resources/general/assets-db","docId":"general/assets-db","unlisted":false},{"type":"link","label":"God Mode for Development","href":"/50033/resources/general/cheats","docId":"general/cheats","unlisted":false},{"type":"link","label":"Creating Helper Buttons in Inspector","href":"/50033/resources/general/helper-buttons","docId":"general/helper-buttons","unlisted":false},{"type":"link","label":"Using Sprite Resolver With Sprite Library","href":"/50033/resources/general/sprite-resolver","docId":"general/sprite-resolver","unlisted":false},{"type":"link","label":"Object Pooling","href":"/50033/resources/general/object-pooling","docId":"general/object-pooling","unlisted":false},{"type":"link","label":"Data-Driven Player Stats Architecture","href":"/50033/resources/general/data-driven-stats","docId":"general/data-driven-stats","unlisted":false},{"type":"link","label":"Combo System","href":"/50033/resources/general/combo","docId":"general/combo","unlisted":false}],"href":"/50033/resources/category/general-resources"}]},"docs":{"general/assets-db":{"id":"general/assets-db","title":"Asset Library","description":"Use these for prototyping, polishing, or exploring game ideas. All sources are Unity-compatible and beginner-friendly. Feel free to make a PR if you find more good resources out there.","sidebar":"tutorialSidebar"},"general/cheats":{"id":"general/cheats","title":"God Mode for Development","description":"When you\u2019re making fun or experimental projects, you often hit the same playtesting pain points like dying constantly during testing, running out of resources, want to skip level geometry, and want consistency across sessions.","sidebar":"tutorialSidebar"},"general/combo":{"id":"general/combo","title":"Combo System","description":"Modern action games use combo systems to transform simple button presses into expressive and skillful combat sequences. These systems define how attacks connect, how player inputs are interpreted, and how timing affects responsiveness. Over the years, developers have explored many different philosophies for designing combos, each shaping the rhythm and style of combat in distinctive ways.","sidebar":"tutorialSidebar"},"general/data-driven-stats":{"id":"general/data-driven-stats","title":"Data-Driven Player Stats Architecture","description":"The foundation of any action or combat system is the player\u2019s state tweaking balance requires code edits, sharing attributes between characters leads to duplication, and multiplayer contexts introduce bugs when state is unintentionally shared across instances.","sidebar":"tutorialSidebar"},"general/helper-buttons":{"id":"general/helper-buttons","title":"Creating Helper Buttons in Inspector","description":"During development, you would frequently want to test and call a function that damages the Player, that triggers GameOver state, etc. They require certain conditions before they can be run, and you might need to spend time setting up the environment/conditions each time during Play Mode to test that function.","sidebar":"tutorialSidebar"},"general/object-pooling":{"id":"general/object-pooling","title":"Object Pooling","description":"Object pooling is a design pattern (specifically: creational pattern) that you can use to optimize your projects by lowering the burden that is placed on the CPU when having to rapidly instantiate and destroy GameObjects. It is particularly useful for top-down bullethell games, or games that have swarms of monsters that are constantly created and destroyed at runtime.","sidebar":"tutorialSidebar"},"general/prog-pattern":{"id":"general/prog-pattern","title":"Game Programming Patterns","description":"This section provides curated resources for improving game code structure and maintainability.","sidebar":"tutorialSidebar"},"general/sprite-resolver":{"id":"general/sprite-resolver","title":"Using Sprite Resolver With Sprite Library","description":"Goal: to make Animator run purely on Category/Label, while you hot-swap the SpriteLibraryAsset at runtime and not care about which sprite is being shown.","sidebar":"tutorialSidebar"},"general/tilemap":{"id":"general/tilemap","title":"Tilemap","description":"Unity Tilemap is a feature of the Unity game engine designed to simplify the creation and management of 2D grid-based environments. It allows developers to create and edit tile-based worlds efficiently, making it particularly useful for games like platformers, RPGs, puzzle games, or any game that relies on a grid-like structure. You can read the official tutorial here.","sidebar":"tutorialSidebar"},"general/uidb":{"id":"general/uidb","title":"The Game UI Database","description":"The Game UI Database is a resource designed for game designers, developers, and UX/UI professionals to explore and analyze the user interface (UI) and user experience (UX) design in video games. It provides a catalog of screenshots and breakdowns of various UI elements from a wide variety of games, categorized by genres, platforms, and other design considerations.","sidebar":"tutorialSidebar"}}}}')}}]);